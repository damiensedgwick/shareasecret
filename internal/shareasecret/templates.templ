package shareasecret

type notifications struct {
	errorMsg   string
	warningMsg string
	successMsg string
}

templ script(t string, src string) {
	<script type={ t } src={ src }></script>
}

templ layout(footerIncludes []templ.Component) {
	<!DOCTYPE html>
	<html lang="en" data-theme="light">
		<head>
			<title>shareasecret - share encrypted secrets with others</title>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<meta name="description" content="Client-side encrypted, time limited, opening count restricted shareable links."/>
			<meta
				http-equiv="Content-Security-Policy"
				content="default-src 'self'"
			/>
			<link rel="stylesheet" type="text/css" href="/static/css/pico.min.css"/>
			<link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
		</head>
		<body>
			<noscript>
				<meta http-equiv="refresh" content="0;url=/nojs"/>
			</noscript>
			<a href="/" aria-label="navigate to landing page">
				<header>
					shareasecret
				</header>
			</a>
			<div class="container">
				{ children... }
			</div>
			@script("module", "/static/js/global.mjs")
			if footerIncludes != nil {
				for _, f := range footerIncludes {
					@f
				}
			}
		</body>
	</html>
}

templ pageIndex(c notifications, ipRestricted bool) {
	@layout([]templ.Component{script("module", "/static/js/index_page.mjs")}) {
		<main>
			if !ipRestricted {
				<section>
					<h1>create a secret</h1>
					<p>
						secrets are encrypted client side (i.e. on your computer) before being persisted on the server.
						the unencrypted text is never transmitted over the network and cannot be viewed by anyone unless they
						know (or guess/bruteforce) the encryption key.
					</p>
					<p>
						encryption keys should be as long as possible and contain sufficient entropy. this does
						<strong>not</strong> mean they have to be randomised or impossible to remember.
					</p>
				</section>
				<section>
					<form id="createSecretForm" class="create-secret-form">
						@componentNotifications(c)
						<input type="hidden" name="encryptedSecret"/>
						<div class="create-secret-form__field create-secret-form__option-plaintext-secret">
							<label for="plaintextSecret">The text you'd like to make secret: </label>
							<textarea autocomplete="off" form="none" name="plaintextSecret" rows="5" autofocus data-1p-ignore></textarea>
						</div>
						<div class="create-secret-form__options">
							<div class="create-secret-form__field create-secret-form__option-encryption-key">
								<label for="password">Encryption key:</label>
								<input autocomplete="off" form="none" type="password" name="password" data-1p-ignore/>
							</div>
							<div class="create-secret-form__field create-secret-form__option-ttl">
								<label for="ttl">Time until secret expires:</label>
								<select name="ttl">
									<option value="30">30 Minutes</option>
									<option value="60">1 Hour</option>
									<option value="180">3 Hours</option>
									<option value="720">12 Hours</option>
									<option value="1440">1 Day</option>
									<option value="4320">3 Days</option>
									<option value="10080">7 Days</option>
								</select>
							</div>
							<div class="create-secret-form__field create-secret-form__option-maximum-views">
								<label for="maxViews">Maximum Views (0 = Infinite):</label>
								<input autocomplete="off" type="number" min="0" name="maxViews" value="1"/>
							</div>
						</div>
						<button type="submit">
							Encrypt and save
						</button>
					</form>
				</section>
			} else {
				<section>
					<h1>shareasecret</h1>
					@componentNotifications(c)
					<p>
						this shareasecret instance is private and only authorised users are able to create secrets. secrets created
						by those users are still able to be viewed and managed by everyone.
					</p>
					<p>
						{ "for" } more information, please visit the shareasecret repository:
						<a href="https://github.com/lsymds/shareasecret">github.com/lsymds/shareasecret</a>.
					</p>
				</section>
			}
		</main>
	}
}

templ pageViewSecretInterstitial() {
	@layout(nil) {
		<main>
			<section>
				<h1>open secret</h1>
				<p>
					by clicking the button below and progressing you will add a view of the secret. if your view is then equal to
					the maximum amount of views this secret permits, it will be deleted and will not be viewable for anyone
					but you in your current session
				</p>
			</section>
			<section>
				<form method="POST">
					<button type="submit">Open Secret</button>
				</form>
			</section>
		</main>
	}
}

templ pageViewSecret(cipherText string, c notifications) {
	@layout([]templ.Component{script("module", "/static/js/view_secret_page.mjs")}) {
		<main>
			<section>
				<h1>view secret</h1>
				<p>
					enter the encryption key originally used to encrypt this secret to reverse the encrypted cipher text
					back to its plaintext form.
				</p>
				<p>
					{ "if" } you don't know what the encryption key is/was, get the sender of this link to tell you again.
					{ "if" } they don't know it, then they'll need to create a new secret with a new password.
				</p>
			</section>
			<section>
				<form id="decryptSecretForm">
					@componentNotifications(c)
					<input type="hidden" name="cipherText" value={ cipherText }/>
					<fieldset>
						<label for="display">Secret:</label>
						<textarea autocomplete="off" name="display" disabled data-1p-ignore>{ cipherText }</textarea>
					</fieldset>
					<fieldset>
						<label for="password">Encryption Key:</label>
						<input autocomplete="off" type="password" name="password" autofocus data-1p-ignore/>
					</fieldset>
					<button type="submit">Decrypt</button>
				</form>
			</section>
		</main>
	}
}

templ pageManageSecret(viewSecretURL string, deleteSecretURL string, c notifications) {
	@layout(nil) {
		<main>
			<section>
				<h1>manage secret</h1>
				<p>
					your secret has been created. the page you are on is the management page where you are able to view
					information about your secret such as its viewing URL and the amount of times it's been accessed
				</p>
				<p>
					do not share the URL of this page with anyone you don't want to be able to delete the secret. share
					the viewing URL highlighted below instead.
				</p>
			</section>
			<section>
				<fieldset>
					<label for="viewing_url">Viewing URL:</label>
					<fieldset role="group">
						<input disabled type="text" name="viewing_url" value={ viewSecretURL }/>
						<button aria-label="Copy viewing URL" class="input-action j-button--copy" data-target="viewing_url">
							<img src="/static/images/clipboard_icon.svg" aria-hidden/>
						</button>
					</fieldset>
				</fieldset>
			</section>
			<section class="manage-secret-page__buttons">
				<a href="/">
					<button type="button" class="primary wide">Create another secret</button>
				</a>
				<form action={ templ.SafeURL(deleteSecretURL) } method="POST">
					<button type="submit" class="outline secondary">Delete this secret</button>
				</form>
			</section>
		</main>
	}
}

templ pageNoJavascript() {
	@layout(nil) {
		<main>
			<h1>javascript is required</h1>
			<p>
				the core component of this application (secrets) relies completely on client side encryption enabled by
				javascript. thus, if your browser does not support JavaScript or if you have it disabled, you will not
				be able to continue.
			</p>
			<img src="/static/images/professor_pug.jpg" aria-hidden/>
		</main>
	}
}

templ pageOops() {
	@layout(nil) {
		<main>
			<h1>oops - something broke</h1>
			<p>
				something went wrong. if you were performing an action when this error occurred; try again. if you keep
				experiencing the same error contact the administrator of this shareasecret instance.
			</p>
			<img src="/static/images/error_pug.jpg" aria-hidden/>
		</main>
	}
}

templ componentNotifications(n notifications) {
	<section class="notifications">
		<div
			class={
				"notifications__notification notifications__notification--error",
				templ.KV("notifications__notification--hidden", n.errorMsg == ""),
			}
		>
			<img src="/static/images/error_icon.svg" aria-hidden/>
			<span>{ n.errorMsg }</span>
		</div>
		<div
			class={
				"notifications__notification notifications__notification--warning",
				templ.KV("notifications__notification--hidden", n.warningMsg == ""),
			}
		>
			<img src="/static/images/warning_icon.svg" aria-hidden/>
			<span>{ n.warningMsg }</span>
		</div>
		<div
			class={
				"notifications__notification notifications__notification--success",
				templ.KV("notifications__notification--hidden", n.successMsg == ""),
			}
		>
			<img src="/static/images/tick_icon.svg" aria-hidden/>
			<span>{ n.successMsg }</span>
		</div>
	</section>
}
