package shareasecret

type notifications struct {
	errorMsg   string
	successMsg string
}

templ script(t string, src string) {
	<script type={ t } src={ src }></script>
}

templ layout(footerIncludes []templ.Component) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<title>shareasecret - share encrypted secrets with others</title>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<link rel="stylesheet" type="text/css" href="/static/css/pico.min.css"/>
			<link rel="stylesheet" type="text/css" href="/static/css/style.css"/>
		</head>
		<body>
			<noscript>
				<meta http-equiv="refresh" content="0;url=/nojs"/>
			</noscript>
			<a href="/" aria-label="navigate to landing page">
				<header>
					shareasecret
				</header>
			</a>
			<div class="container">
				{ children... }
			</div>
			@script("module", "/static/js/global.mjs")
			if footerIncludes != nil {
				for _, f := range footerIncludes {
					@f
				}
			}
		</body>
	</html>
}

templ pageIndex(c notifications) {
	@layout([]templ.Component{script("module", "/static/js/index_page.mjs")}) {
		<main>
			<section>
				<h1>create a secret</h1>
				<p>
					secrets are encrypted client side (i.e. on your computer) before being persisted on the server.
					the unencrypted text is never transmitted over the network and cannot be viewed by anyone unless they
					know (or guess/bruteforce) the encryption key.
				</p>
				<p>
					encryption keys should be as long as possible and contain sufficient entropy. this does
					<strong>not</strong> mean they have to be randomised or impossible to remember.
				</p>
			</section>
			<section>
				<form id="createSecretForm" class="create-secret-form">
					@componentNotifications(c)
					<input type="hidden" name="encryptedSecret"/>
					<fieldset class="create-secret-form__field create-secret-form__option-plaintext-secret">
						<label for="plaintextSecret">The text you'd like to make secret: </label>
						<textarea form="none" name="plaintextSecret" autofocus></textarea>
					</fieldset>
					<div class="create-secret-form__options">
						<fieldset class="create-secret-form__field create-secret-form__option-encryption-key">
							<label for="password">Encryption key:</label>
							<input form="none" type="text" name="password"/>
						</fieldset>
						<fieldset class="create-secret-form__field create-secret-form__option-ttl">
							<label for="ttl">Time until secret expires:</label>
							<select name="ttl">
								<option value="30">30 Minutes</option>
								<option value="60">1 Hour</option>
								<option value="180">3 Hours</option>
								<option value="720">12 Hours</option>
								<option value="1440">1 Day</option>
								<option value="4320">3 Days</option>
								<option value="10080">7 Days</option>
							</select>
						</fieldset>
					</div>
					<button type="submit">
						Encrypt and save
					</button>
				</form>
			</section>
		</main>
	}
}

templ pageViewSecret(cipherText string, c notifications) {
	@layout([]templ.Component{script("module", "/static/js/view_secret_page.mjs")}) {
		<main>
			<section>
				<h1>view secret</h1>
				<p>
					enter the encryption key originally used to encrypt this secret to reverse the encrypted cipher text
					back to its plaintext form.
				</p>
				<p>
					{ "if" } you don't know what the encryption key is/was, get the sender of this link to tell you again.
					{ "if" } they don't know it, then they'll need to create a new secret with a new password.
				</p>
			</section>
			<section>
				<form id="decryptSecretForm">
					@componentNotifications(c)
					<input type="hidden" name="cipherText" value={ cipherText }/>
					<fieldset>
						<label for="display">Secret:</label>
						<textarea name="display" disabled>{ cipherText }</textarea>
					</fieldset>
					<fieldset>
						<label for="password">Encryption Key:</label>
						<input type="text" name="password" autofocus/>
					</fieldset>
					<button type="submit">Decrypt</button>
				</form>
			</section>
		</main>
	}
}

templ pageManageSecret(manageSecretID string, viewSecretURL string, deleteSecretURL string, c notifications) {
	@layout(nil) {
		<main>
			<section>
				<h1>manage secret</h1>
				<p>
					your secret has been created. the page you are on is the management page where you are able to view
					information about your secret such as its viewing URL and the amount of times it's been accessed
				</p>
				<p>
					do not share the URL of this page with anyone you don't want to be able to delete the secret. share
					the viewing URL highlighted below instead.
				</p>
			</section>
			<section>
				<fieldset>
					<label for="viewing_url">Viewing URL:</label>
					<fieldset role="group">
						<input disabled type="text" name="viewing_url" value={ viewSecretURL }/>
						<button aria-label="Copy viewing URL" class="input-action j-button--copy" data-target="viewing_url">
							<svg
								xmlns="http://www.w3.org/2000/svg"
								fill="none"
								viewBox="0 0 24 24"
								stroke-width="1.5"
								stroke="currentColor"
								width="18"
								height="18"
							>
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									d="M15.666 3.888A2.25 2.25 0 0 0 13.5 2.25h-3c-1.03 0-1.9.693-2.166 1.638m7.332 0c.055.194.084.4.084.612v0a.75.75 0 0 1-.75.75H9a.75.75 0 0 1-.75-.75v0c0-.212.03-.418.084-.612m7.332 0c.646.049 1.288.11 1.927.184 1.1.128 1.907 1.077 1.907 2.185V19.5a2.25 2.25 0 0 1-2.25 2.25H6.75A2.25 2.25 0 0 1 4.5 19.5V6.257c0-1.108.806-2.057 1.907-2.185a48.208 48.208 0 0 1 1.927-.184"
								></path>
							</svg>
						</button>
					</fieldset>
				</fieldset>
			</section>
			<section class="manage-secret-page__buttons">
				<a href="/">
					<button type="button" class="primary wide">Create another secret</button>
				</a>
				<form action={ templ.SafeURL(deleteSecretURL) } method="POST">
					<button type="submit" class="outline secondary">Delete this secret</button>
				</form>
			</section>
		</main>
	}
}

templ pageNoJavascript() {
	@layout(nil) {
		<main>
			<p>
				The core component of this application (secrets) relies completely on client side encryption enabled by
				JavaScript. Thus, if your browser does not support JavaScript or if you have it disabled, you will not
				be able to continue.
			</p>
		</main>
	}
}

templ pageOops() {
	@layout(nil) {
		<main>
			<p>Oops. Something went wrong. Please try again.</p>
			<p>If you've hit this error more than once, contact the administrator of this shareasecret instance.</p>
		</main>
	}
}

templ componentNotifications(n notifications) {
	<section class="notifications">
		<div
			class="notifications__notification notifications__notification--error"
			if n.errorMsg == "" {
				style="display: none;"
			}
		>
			<svg
				xmlns="http://www.w3.org/2000/svg"
				fill="none"
				viewBox="0 0 24 24"
				stroke-width="1.5"
				stroke="currentColor"
				width="18"
				height="18"
			>
				<path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m9-.75a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9 3.75h.008v.008H12v-.008Z"></path>
			</svg>
			<span>{ n.errorMsg }</span>
		</div>
		<div
			class="notifications__notification notifications__notification--success"
			if n.successMsg == "" {
				style="display: none;"
			}
		>
			<svg
				xmlns="http://www.w3.org/2000/svg"
				fill="none"
				viewBox="0 0 24 24"
				stroke-width="1.5"
				stroke="currentColor"
				width="18"
				height="18"
			>
				<path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75 11.25 15 15 9.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"></path>
			</svg>
			<span>{ n.successMsg }</span>
		</div>
	</section>
}
